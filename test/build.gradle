buildscript {
    repositories {
        maven {
            url uri('../../repo')
        }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
//        classpath 'com.github.122006.Zircon:gradle:2.8t'
    }
}
apply plugin: 'java'
//apply plugin: 'zircon'

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven {
        url uri('../../repo')
    }
    maven { url 'https://jitpack.io' }
    mavenCentral()
}


//sourceCompatibility = JavaVersion.VERSION_1_8
//targetCompatibility = JavaVersion.VERSION_1_8

test {
    useJUnitPlatform()
}
dependencies {
    annotationProcessor project(":javac")
    implementation project(":zircon")
    annotationProcessor "org.projectlombok:lombok:1.18.20"
    compileOnly 'org.projectlombok:lombok:1.18.20'
    implementation('com.github.122006:ExMethodUtil:b11d5e97d2')
//    implementation 'com.github.122006.Zircon:zircon:3.+'
//    implementation 'com.github.122006:LinearHttp:1.2.8'
    implementation 'com.alibaba:fastjson:1.1.72.android'
    implementation('org.springframework.boot:spring-boot-starter-web:2.7.3')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testAnnotationProcessor project(":javac")
//    testImplementation project(":test")
}
tasks.withType(JavaCompile) {
    it.options.compilerArgs << "-Xplugin:ZrExMethod"
    it.options.compilerArgs << "-Xplugin:ZrString"
    it.options.fork = true
    if (Integer.parseInt(System.getProperty("java.version").split("\\.")[0]) >= 11) {
        it.options.forkOptions.jvmArgs
                << "--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"
                << "--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"
                << "--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.code.Types=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.code.Names=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.code.Symtab=ALL-UNNAMED"
                << "--add-opens=jdk.compiler/com.sun.tools.javac.processing.JavacProcessingEnvironment=ALL-UNNAMED"
        it.options.fork = true
    }
}
